{% import "OroEmailBundle::macros.html.twig" as EA %}

{% if renderContexts is defined and renderContexts %}
<div class="email-context-activity-list">
    {{ EA.email_contexts(thread[0]) }}
</div>
{% endif %}

{% if shortEmailThread is not defined and thread|length >= 7 %}
    {# if shortEmailThread is not turned off and length of thread over 6 emails -- render short thread #}
    {% set shortEmailThread = true %}
    {% set skippedEmails = [] %}
{% endif %}
{% set threadViewOptions = {
    view: 'oroemail/js/app/views/email-thread-view',
    actionPanelSelector: '.email-thread-action-panel'
} %}
{% set threadViewOptions = threadViewOptions|merge({isBaseView: not renderContexts}) %}
<div class="widget-content thread-view"
     data-page-component-module="oroui/js/app/components/view-component"
     data-page-component-options="{{ threadViewOptions|json_encode }}"
     data-layout="separate">
    {% for email in thread|reverse %}
        {% if shortEmailThread is defined and shortEmailThread and loop.index > 2 and loop.index < (loop.length - 1) %}
            {% set skippedEmails = skippedEmails|merge([email.id]) %}
            {% if loop.index == loop.length - 2 %}
            <div class="email-load-more" data-emails-items="{{ skippedEmails|json_encode }}">
                <span class="load-more-label">{{ 'oro.email.load_more_emails'|trans({'%quantity%': skippedEmails|length}) }}</span>
            </div>
            {% endif %}
        {% else %}
            {# email collapsed also can be evaluated for other conditions here #}
            {% set emailCollapsed = not loop.last %}
            {% include 'OroEmailBundle:Email/Thread:emailItem.html.twig' %}
        {% endif %}
    {% endfor %}
</div>
