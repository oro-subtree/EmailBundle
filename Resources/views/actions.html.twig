{#
    Renders a link which can be used to open send email dialog
    Parameters:
        email      - TO email address
        entity     - a target entity an email should be associated with
        parameters - additional parameters, array:
            [
                'aCss' - additional css class for 'a' tag
            ]
#}
{% macro sendEmailLink(email, entity, parameters) -%}
    {% import 'OroUIBundle::macros.html.twig' as UI %}
    {{- UI.clientLink({
        'dataUrl': path(
            'oro_email_email_create', {
                to: email,
                entityClass: oro_class_name(entity, true),
                entityId: entity.id
        }),
        'aCss': parameters.aCss is defined ? parameters.aCss ~ ' no-hash' : 'no-hash',
        'label': email,
        'widget': {
            'type': 'dialog',
            'multiple': true,
            'reload-grid-name': 'activity-email-grid',
            'options': {
                'alias': 'email-dialog',
                'dialogOptions' : {
                    'title' : 'oro.email.send_email'|trans,
                    'allowMaximize': true,
                    'allowMinimize': true,
                    'dblclick': 'maximize',
                    'maximizedHeightDecreaseBy': 'minimize-bar',
                    'width': 1000
                }
            }
        }
    }) -}}
{% endmacro -%}

{% macro replyButton(emailEntity, parameters = {}) -%}
    {% import 'OroUIBundle::macros.html.twig' as UI %}
    {%- set routeParameters = {
        id: emailEntity.id
    } -%}
    {%- if parameters.routeParameters is defined %}
        {%- set routeParameters = routeParameters|merge(parameters.routeParameters) -%}
    {% endif -%}
    {{- UI.clientButton({
        'dataUrl': path('oro_email_email_reply', routeParameters),
        'aCss': parameters.aCss is defined ? parameters.aCss ~ ' no-hash' : 'no-hash',
        'iCss': parameters.iCss is defined ? parameters.iCss ~ ' icon-reply' : 'icon-reply',
        'label': 'oro.email.reply'|trans,
        'widget': {
            'type': 'dialog',
            'multiple': false,
            'refresh-widget-alias': 'activity-list-widget',
            'reload-widget-alias': 'thread-view',
            'options': {
                'alias': 'reply-dialog',
                'dialogOptions' : {
                    'title' : 'oro.email.reply'|trans,
                    'allowMaximize': true,
                    'allowMinimize': true,
                    'dblclick': 'maximize',
                    'maximizedHeightDecreaseBy': 'minimize-bar',
                    'width': 1000
                }
            }
        }
    }) -}}
{% endmacro -%}

{% macro forwardButton(emailEntity, parameters = {}) -%}
    {% import 'OroUIBundle::macros.html.twig' as UI %}
    {%- set routeParameters = {
        id: emailEntity.id
    } -%}
    {%- if parameters.routeParameters is defined %}
        {%- set routeParameters = routeParameters|merge(parameters.routeParameters) -%}
    {% endif -%}
    {{- UI.clientButton({
        'dataUrl': path('oro_email_email_forward', routeParameters),
        'aCss': parameters.aCss is defined ? parameters.aCss ~ ' no-hash' : 'no-hash',
        'iCss': parameters.iCss is defined ? parameters.iCss ~ ' icon-mail-forward' : 'icon-mail-forward',
        'label': 'oro.email.forward'|trans,
        'widget': {
            'type': 'dialog',
            'multiple': false,
            'refresh-widget-alias': 'activity-list-widget',
            'reload-widget-alias': 'thread-view',
            'options': {
                'alias': 'foward-dialog',
                'dialogOptions' : {
                    'title' : 'oro.email.forward'|trans,
                    'allowMaximize': true,
                    'allowMinimize': true,
                    'dblclick': 'maximize',
                    'maximizedHeightDecreaseBy': 'minimize-bar',
                    'width': 1000
                }
            }
        }
    }) -}}
{% endmacro -%}

{% macro addContextButton(emailEntity, parameters) -%}
    {% import 'OroUIBundle::macros.html.twig' as UI %}
    {{ UI.clientButton({
        'dataUrl': path(
            'oro_email_context', {
                id: emailEntity.id
        }),
        'aCss': 'no-hash',
        'iCss': 'icon-link hide-text',
        'dataId': emailEntity.id,
        'label' : 'oro.email.add_context.label'|trans,
        'widget' : {
            'type' : 'dialog',
            'multiple' : true,
            'refresh-widget-alias': 'activity-list-widget',
            'options' : {
                'alias': 'email-context-dialog',
                'dialogOptions' : {
                    'title' : 'oro.email.add_context_entity.label'|trans,
                    'allowMaximize': true,
                    'allowMinimize': true,
                    'modal': true,
                    'dblclick': 'maximize',
                    'maximizedHeightDecreaseBy': 'minimize-bar',
                    'width': 1000,
                    'height': 600
                }
            }
        }
    }) }}
{% endmacro %}

{% macro createEmailButton(parameters = {}) -%}
    {% import 'OroUIBundle::macros.html.twig' as UI %}
    {{ UI.clientButton({
        'dataUrl': path('oro_email_email_create', parameters),
        'label': 'oro.email.menu.compose'|trans,
        'iCss': 'icon-envelope',
        'widget': {
            'type': 'dialog',
            'multiple': true,
            'reload-grid-name': 'user-email-grid',
            'options': {
                'alias': 'email-dialog',
                'dialogOptions' : {
                    'title' : 'oro.email.send_email'|trans,
                    'allowMaximize': true,
                    'allowMinimize': true,
                    'dblclick': 'maximize',
                    'maximizedHeightDecreaseBy': 'minimize-bar',
                    'width': 1000
                }
            }
        }
    }) }}
{% endmacro %}